# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=56485:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 2 iterations, 1 s each
# Measurement: 50 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkBeanManual

# Run progress: 0.00% complete, ETA 00:30:24
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/C:/Users/Administrator/.m2/repository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5.168 ops/us
# Warmup Iteration   2: 6.317 ops/us
Iteration   1: 6.551 ops/us
Iteration   2: 6.759 ops/us
Iteration   3: 6.507 ops/us
Iteration   4: 5.746 ops/us
Iteration   5: 