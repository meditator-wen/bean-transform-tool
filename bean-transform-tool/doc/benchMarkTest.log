# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=64392:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 50 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkBeanManual

# Run progress: 0.00% complete, ETA 00:21:15
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/C:/Users/Administrator/.m2/repository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4597056.316 ops/s
# Warmup Iteration   2: 6180891.344 ops/s
# Warmup Iteration   3: 5420817.375 ops/s
# Warmup Iteration   4: 6554245.364 ops/s
# Warmup Iteration   5: 6429302.735 ops/s
Iteration   1: 6526059.620 ops/s
Iteration   2: 6563403.670 ops/s
Iteration   3: 6332373.364 ops/s
Iteration   4: 6417502.104 ops/s
Iteration   5: 6021434.142 ops/s
Iteration   6: 6341031.033 ops/s
Iteration   7: 6316009.845 ops/s
Iteration   8: 6371225.204 ops/s
Iteration   9: 6411018.521 ops/s
Iteration  10: 6433460.211 ops/s
Iteration  11: 6496400.689 ops/s
Iteration  12: 6168444.530 ops/s
Iteration  13: 6331818.780 ops/s
Iteration  14: 5945651.450 ops/s
Iteration  15: 6401696.178 ops/s
Iteration  16: 6301548.124 ops/s
Iteration  17: 6057367.654 ops/s
Iteration  18: 6332838.601 ops/s
Iteration  19: 6353055.528 ops/s
Iteration  20: 6374327.703 ops/s
Iteration  21: 6198298.890 ops/s
Iteration  22: 6273066.186 ops/s
Iteration  23: 6293470.244 ops/s
Iteration  24: 5309775.284 ops/s
Iteration  25: 6595245.659 ops/s
Iteration  26: 6864327.931 ops/s
Iteration  27: 6705089.836 ops/s
Iteration  28: 6780123.354 ops/s
Iteration  29: 6305491.854 ops/s
Iteration  30: 6699150.950 ops/s
Iteration  31: 6726203.191 ops/s
Iteration  32: 6820329.903 ops/s
Iteration  33: 6636680.320 ops/s
Iteration  34: 6813667.934 ops/s
Iteration  35: 6691482.271 ops/s
Iteration  36: 6587346.740 ops/s
Iteration  37: 6072130.348 ops/s
Iteration  38: 6383512.860 ops/s
Iteration  39: 6504258.049 ops/s
Iteration  40: 6469757.852 ops/s
Iteration  41: 5869287.027 ops/s
Iteration  42: 6326802.899 ops/s
Iteration  43: 6291803.874 ops/s
Iteration  44: 6321191.813 ops/s
Iteration  45: 6331508.408 ops/s
Iteration  46: 6282674.436 ops/s
Iteration  47: 6299522.631 ops/s
Iteration  48: 6203313.980 ops/s
Iteration  49: 6266419.366 ops/s
Iteration  50: 6310824.333 ops/s


Result "bean.transform.unittest.jmhtest.Jmh.benchMarkBeanManual":
  6374588.507 ±(99.9%) 133766.011 ops/s [Average]
  (min, avg, max) = (5309775.284, 6374588.507, 6864327.931), stdev = 270213.961
  CI (99.9%): [6240822.496, 6508354.519] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=64392:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 50 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkBeanTransformsHandler

# Run progress: 20.00% complete, ETA 00:17:08
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/C:/Users/Administrator/.m2/repository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5073995.127 ops/s
# Warmup Iteration   2: 5709366.380 ops/s
# Warmup Iteration   3: 6307464.433 ops/s
# Warmup Iteration   4: 6379668.158 ops/s
# Warmup Iteration   5: 6374193.023 ops/s
Iteration   1: 6098582.878 ops/s
Iteration   2: 5877465.480 ops/s
Iteration   3: 6155862.023 ops/s
Iteration   4: 6204972.086 ops/s
Iteration   5: 6174167.754 ops/s
Iteration   6: 6160158.447 ops/s
Iteration   7: 6120861.935 ops/s
Iteration   8: 6021021.812 ops/s
Iteration   9: 5915489.607 ops/s
Iteration  10: 5899659.380 ops/s
Iteration  11: 6054032.852 ops/s
Iteration  12: 5966216.852 ops/s
Iteration  13: 5862660.562 ops/s
Iteration  14: 5713128.720 ops/s
Iteration  15: 6001602.921 ops/s
Iteration  16: 6022754.991 ops/s
Iteration  17: 6127837.091 ops/s
Iteration  18: 6082432.009 ops/s
Iteration  19: 6032088.874 ops/s
Iteration  20: 6158547.077 ops/s
Iteration  21: 6027933.214 ops/s
Iteration  22: 6182414.640 ops/s
Iteration  23: 6184924.953 ops/s
Iteration  24: 6203690.833 ops/s
Iteration  25: 5979471.088 ops/s
Iteration  26: 5901889.027 ops/s
Iteration  27: 6228779.960 ops/s
Iteration  28: 6185586.660 ops/s
Iteration  29: 6152675.586 ops/s
Iteration  30: 6140034.874 ops/s
Iteration  31: 6165989.576 ops/s
Iteration  32: 6190105.588 ops/s
Iteration  33: 5747398.251 ops/s
Iteration  34: 5758871.514 ops/s
Iteration  35: 6011440.669 ops/s
Iteration  36: 5738720.605 ops/s
Iteration  37: 5798434.937 ops/s
Iteration  38: 5242307.346 ops/s
Iteration  39: 5906082.368 ops/s
Iteration  40: 5902195.457 ops/s
Iteration  41: 6034999.585 ops/s
Iteration  42: 5706708.708 ops/s
Iteration  43: 5912236.017 ops/s
Iteration  44: 5973917.740 ops/s
Iteration  45: 5853654.255 ops/s
Iteration  46: 5841182.989 ops/s
Iteration  47: 5715211.212 ops/s
Iteration  48: 5851596.051 ops/s
Iteration  49: 5720226.276 ops/s
Iteration  50: 5586707.488 ops/s


Result "bean.transform.unittest.jmhtest.Jmh.benchMarkBeanTransformsHandler":
  5969898.616 ±(99.9%) 97995.781 ops/s [Average]
  (min, avg, max) = (5242307.346, 5969898.616, 6228779.960), stdev = 197956.326
  CI (99.9%): [5871902.835, 6067894.398] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=64392:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 50 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkMapStruct

# Run progress: 40.00% complete, ETA 00:12:50
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/C:/Users/Administrator/.m2/repository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
3146433.770 ops/s
# Warmup Iteration   2: 4029578.897 ops/s
# Warmup Iteration   3: 4147744.914 ops/s
# Warmup Iteration   4: 4536369.915 ops/s
# Warmup Iteration   5: 4382968.941 ops/s
Iteration   1: 4477349.318 ops/s
Iteration   2: 4345132.550 ops/s
Iteration   3: 4431460.244 ops/s
Iteration   4: 4530187.887 ops/s
Iteration   5: 4403109.129 ops/s
Iteration   6: 4419757.880 ops/s
Iteration   7: 4424037.306 ops/s
Iteration   8: 4464162.243 ops/s
Iteration   9: 4528729.281 ops/s
Iteration  10: 4012707.607 ops/s
Iteration  11: 4346561.907 ops/s
Iteration  12: 4326668.933 ops/s
Iteration  13: 4313253.832 ops/s
Iteration  14: 4358188.839 ops/s
Iteration  15: 4430721.358 ops/s
Iteration  16: 4479495.780 ops/s
Iteration  17: 4444525.188 ops/s
Iteration  18: 4494213.874 ops/s
Iteration  19: 4544846.619 ops/s
Iteration  20: 4427193.897 ops/s
Iteration  21: 4569785.885 ops/s
Iteration  22: 4144297.155 ops/s
Iteration  23: 4396084.073 ops/s
Iteration  24: 4413426.902 ops/s
Iteration  25: 4451400.220 ops/s
Iteration  26: 4300404.319 ops/s
Iteration  27: 4447611.560 ops/s
Iteration  28: 4666946.962 ops/s
Iteration  29: 4581134.538 ops/s
Iteration  30: 4621673.053 ops/s
Iteration  31: 4638868.728 ops/s
Iteration  32: 4647596.788 ops/s
Iteration  33: 4669605.528 ops/s
Iteration  34: 4281984.690 ops/s
Iteration  35: 4635010.804 ops/s
Iteration  36: 4669688.813 ops/s
Iteration  37: 4697284.287 ops/s
Iteration  38: 4627702.281 ops/s
Iteration  39: 4667815.922 ops/s
Iteration  40: 4661356.008 ops/s
Iteration  41: 4507926.108 ops/s
Iteration  42: 4697600.448 ops/s
Iteration  43: 4652764.805 ops/s
Iteration  44: 4683283.031 ops/s
Iteration  45: 4674242.507 ops/s
Iteration  46: 4259270.399 ops/s
Iteration  47: 4657301.901 ops/s
Iteration  48: 4651989.134 ops/s
Iteration  49: 4719471.429 ops/s
Iteration  50: 4626033.910 ops/s


Result "bean.transform.unittest.jmhtest.Jmh.benchMarkMapStruct":
  4502437.317 ±(99.9%) 78404.336 ops/s [Average]
  (min, avg, max) = (4012707.607, 4502437.317, 4719471.429), stdev = 158380.637
  CI (99.9%): [4424032.982, 4580841.653] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=64392:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 50 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkSelmaMapper

# Run progress: 60.00% complete, ETA 00:08:33
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/C:/Users/Administrator/.m2/repository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4564928.042 ops/s
# Warmup Iteration   2: 5766724.570 ops/s
# Warmup Iteration   3: 6301674.811 ops/s
# Warmup Iteration   4: 6382184.792 ops/s
# Warmup Iteration   5: 6345468.490 ops/s
Iteration   1: 6326835.282 ops/s
Iteration   2: 6253309.806 ops/s
Iteration   3: 6356497.788 ops/s
Iteration   4: 6305813.527 ops/s
Iteration   5: 6208033.039 ops/s
Iteration   6: 6317914.584 ops/s
Iteration   7: 5847497.450 ops/s
Iteration   8: 6313019.812 ops/s
Iteration   9: 6221249.790 ops/s
Iteration  10: 6348330.076 ops/s
Iteration  11: 6330757.736 ops/s
Iteration  12: 6295784.836 ops/s
Iteration  13: 6296460.337 ops/s
Iteration  14: 6282151.916 ops/s
Iteration  15: 6332011.623 ops/s
Iteration  16: 6289057.768 ops/s
Iteration  17: 6294706.594 ops/s
Iteration  18: 6292256.155 ops/s
Iteration  19: 5740291.567 ops/s
Iteration  20: 6330444.550 ops/s
Iteration  21: 6326272.213 ops/s
Iteration  22: 6334343.393 ops/s
Iteration  23: 6323911.796 ops/s
Iteration  24: 6289479.413 ops/s
Iteration  25: 6265555.862 ops/s
Iteration  26: 6023139.504 ops/s
Iteration  27: 6223291.556 ops/s
Iteration  28: 6258897.828 ops/s
Iteration  29: 6332395.059 ops/s
Iteration  30: 6357077.761 ops/s
Iteration  31: 5939566.731 ops/s
Iteration  32: 6273155.733 ops/s
Iteration  33: 6280936.578 ops/s
Iteration  34: 6385420.093 ops/s
Iteration  35: 6304296.026 ops/s
Iteration  36: 6306638.579 ops/s
Iteration  37: 6355485.037 ops/s
Iteration  38: 6182708.631 ops/s
Iteration  39: 6195294.007 ops/s
Iteration  40: 6116082.776 ops/s
Iteration  41: 6317142.704 ops/s
Iteration  42: 6337672.037 ops/s
Iteration  43: 5919712.286 ops/s
Iteration  44: 6200316.356 ops/s
Iteration  45: 6309500.131 ops/s
Iteration  46: 6339193.462 ops/s
Iteration  47: 6319710.075 ops/s
Iteration  48: 6289010.092 ops/s
Iteration  49: 6334258.036 ops/s
Iteration  50: 6303727.406 ops/s


Result "bean.transform.unittest.jmhtest.Jmh.benchMarkSelmaMapper":
  6254532.308 ±(99.9%) 66850.638 ops/s [Average]
  (min, avg, max) = (5740291.567, 6254532.308, 6385420.093), stdev = 135041.597
  CI (99.9%): [6187681.669, 6321382.946] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=64392:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 50 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkSpringBeanUtils

# Run progress: 80.00% complete, ETA 00:04:16
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/C:/Users/Administrator/.m2/repository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
252467.224 ops/s
# Warmup Iteration   2: 424610.672 ops/s
# Warmup Iteration   3: 446087.480 ops/s
# Warmup Iteration   4: 464798.673 ops/s
# Warmup Iteration   5: 459869.294 ops/s
Iteration   1: 458102.531 ops/s
Iteration   2: 451322.322 ops/s
Iteration   3: 469573.869 ops/s
Iteration   4: 400141.750 ops/s
Iteration   5: 455663.907 ops/s
Iteration   6: 459836.140 ops/s
Iteration   7: 456814.666 ops/s
Iteration   8: 439004.173 ops/s
Iteration   9: 429497.254 ops/s
Iteration  10: 445206.355 ops/s
Iteration  11: 427108.898 ops/s
Iteration  12: 450963.804 ops/s
Iteration  13: 440229.524 ops/s
Iteration  14: 426563.428 ops/s
Iteration  15: 445946.971 ops/s
Iteration  16: 429623.671 ops/s
Iteration  17: 452587.531 ops/s
Iteration  18: 442807.344 ops/s
Iteration  19: 437019.105 ops/s
Iteration  20: 455190.742 ops/s
Iteration  21: 457401.450 ops/s
Iteration  22: 439433.069 ops/s
Iteration  23: 426157.238 ops/s
Iteration  24: 425325.436 ops/s
Iteration  25: 454432.313 ops/s
Iteration  26: 445006.716 ops/s
Iteration  27: 455453.787 ops/s
Iteration  28: 392498.815 ops/s
Iteration  29: 455692.299 ops/s
Iteration  30: 451106.951 ops/s
Iteration  31: 445331.881 ops/s
Iteration  32: 446005.594 ops/s
Iteration  33: 444825.568 ops/s
Iteration  34: 445440.917 ops/s
Iteration  35: 452365.344 ops/s
Iteration  36: 446273.451 ops/s
Iteration  37: 454780.912 ops/s
Iteration  38: 443067.847 ops/s
Iteration  39: 433985.738 ops/s
Iteration  40: 419454.216 ops/s
Iteration  41: 449138.125 ops/s
Iteration  42: 459274.731 ops/s
Iteration  43: 455948.493 ops/s
Iteration  44: 424000.678 ops/s
Iteration  45: 431660.201 ops/s
Iteration  46: 438165.981 ops/s
Iteration  47: 416636.461 ops/s
Iteration  48: 443668.262 ops/s
Iteration  49: 442039.758 ops/s
Iteration  50: 451726.218 ops/s


Result "bean.transform.unittest.jmhtest.Jmh.benchMarkSpringBeanUtils":
  442390.049 ±(99.9%) 7501.901 ops/s [Average]
  (min, avg, max) = (392498.815, 442390.049, 469573.869), stdev = 15154.211
  CI (99.9%): [434888.148, 449891.950] (assumes normal distribution)


# Run complete. Total time: 00:21:22

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode  Cnt        Score        Error  Units
Jmh.benchMarkBeanManual             thrpt   50  6374588.507 ± 133766.011  ops/s
Jmh.benchMarkBeanTransformsHandler  thrpt   50  5969898.616 ±  97995.781  ops/s
Jmh.benchMarkMapStruct              thrpt   50  4502437.317 ±  78404.336  ops/s
Jmh.benchMarkSelmaMapper            thrpt   50  6254532.308 ±  66850.638  ops/s
Jmh.benchMarkSpringBeanUtils        thrpt   50   442390.049 ±   7501.901  ops/s
