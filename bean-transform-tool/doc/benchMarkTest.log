# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=61782:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 50 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkBeanManual

# Run progress: 0.00% complete, ETA 00:21:15
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/E:/apache-maven-3.6.2-bin/localRepository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5062152.676 ops/s
# Warmup Iteration   2: 7127652.835 ops/s
# Warmup Iteration   3: 7207448.536 ops/s
# Warmup Iteration   4: 7333975.199 ops/s
# Warmup Iteration   5: 7292449.644 ops/s
Iteration   1: 7255300.699 ops/s
Iteration   2: 7269718.066 ops/s
Iteration   3: 7181060.050 ops/s
Iteration   4: 7217715.079 ops/s
Iteration   5: 7252730.068 ops/s
Iteration   6: 7269830.222 ops/s
Iteration   7: 7101815.017 ops/s
Iteration   8: 7130416.624 ops/s
Iteration   9: 6729650.632 ops/s
Iteration  10: 7187676.881 ops/s
Iteration  11: 7197832.461 ops/s
Iteration  12: 7191463.271 ops/s
Iteration  13: 7227717.203 ops/s
Iteration  14: 7273938.508 ops/s
Iteration  15: 7253213.977 ops/s
Iteration  16: 7185732.889 ops/s
Iteration  17: 7281681.248 ops/s
Iteration  18: 7216068.595 ops/s
Iteration  19: 7248912.530 ops/s
Iteration  20: 7243388.986 ops/s
Iteration  21: 6697692.383 ops/s
Iteration  22: 7290311.974 ops/s
Iteration  23: 7247934.417 ops/s
Iteration  24: 7292627.693 ops/s
Iteration  25: 7250260.704 ops/s
Iteration  26: 7162672.028 ops/s
Iteration  27: 7270227.963 ops/s
Iteration  28: 7277355.159 ops/s
Iteration  29: 7269588.202 ops/s
Iteration  30: 7312655.592 ops/s
Iteration  31: 7310106.826 ops/s
Iteration  32: 7308852.258 ops/s
Iteration  33: 6591874.466 ops/s
Iteration  34: 7213903.254 ops/s
Iteration  35: 7186894.498 ops/s
Iteration  36: 7220008.411 ops/s
Iteration  37: 6548813.585 ops/s
Iteration  38: 7099100.495 ops/s
Iteration  39: 7237288.734 ops/s
Iteration  40: 7269159.457 ops/s
Iteration  41: 7258754.089 ops/s
Iteration  42: 7289953.560 ops/s
Iteration  43: 7251855.321 ops/s
Iteration  44: 7263935.478 ops/s
Iteration  45: 6719968.174 ops/s
Iteration  46: 7211998.918 ops/s
Iteration  47: 7244211.093 ops/s
Iteration  48: 7155597.324 ops/s
Iteration  49: 6720007.362 ops/s
Iteration  50: 6901965.064 ops/s


Result "bean.transform.unittest.jmhtest.Jmh.benchMarkBeanManual":
  7159828.750 ±(99.9%) 97549.112 ops/s [Average]
  (min, avg, max) = (6548813.585, 7159828.750, 7312655.592), stdev = 197054.032
  CI (99.9%): [7062279.638, 7257377.862] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=61782:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 50 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkBeanTransformsHandler

# Run progress: 20.00% complete, ETA 00:17:09
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/E:/apache-maven-3.6.2-bin/localRepository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4038715.493 ops/s
# Warmup Iteration   2: 4504180.569 ops/s
# Warmup Iteration   3: 5442055.806 ops/s
# Warmup Iteration   4: 6075246.358 ops/s
# Warmup Iteration   5: 6847432.276 ops/s
Iteration   1: 6135038.181 ops/s
Iteration   2: 6399391.567 ops/s
Iteration   3: 6563312.504 ops/s
Iteration   4: 6398806.016 ops/s
Iteration   5: 6267344.282 ops/s
Iteration   6: 6937536.116 ops/s
Iteration   7: 6988272.579 ops/s
Iteration   8: 7039682.786 ops/s
Iteration   9: 6881569.806 ops/s
Iteration  10: 7008791.417 ops/s
Iteration  11: 6930505.724 ops/s
Iteration  12: 6989297.956 ops/s
Iteration  13: 7018642.828 ops/s
Iteration  14: 7009791.449 ops/s
Iteration  15: 7032264.498 ops/s
Iteration  16: 6509862.470 ops/s
Iteration  17: 6174968.257 ops/s
Iteration  18: 7007603.543 ops/s
Iteration  19: 7032746.558 ops/s
Iteration  20: 7010404.898 ops/s
Iteration  21: 7053888.264 ops/s
Iteration  22: 7032424.711 ops/s
Iteration  23: 7002572.362 ops/s
Iteration  24: 7032326.162 ops/s
Iteration  25: 7033666.189 ops/s
Iteration  26: 6954086.883 ops/s
Iteration  27: 6697183.114 ops/s
Iteration  28: 6999155.943 ops/s
Iteration  29: 6558432.507 ops/s
Iteration  30: 7005285.653 ops/s
Iteration  31: 7016970.104 ops/s
Iteration  32: 7041690.991 ops/s
Iteration  33: 7014845.689 ops/s
Iteration  34: 7017168.948 ops/s
Iteration  35: 7011720.566 ops/s
Iteration  36: 6967905.246 ops/s
Iteration  37: 7030897.464 ops/s
Iteration  38: 7012731.569 ops/s
Iteration  39: 7104391.429 ops/s
Iteration  40: 7040379.923 ops/s
Iteration  41: 6260381.025 ops/s
Iteration  42: 7075056.655 ops/s
Iteration  43: 7044510.993 ops/s
Iteration  44: 7089525.660 ops/s
Iteration  45: 7029195.134 ops/s
Iteration  46: 6978571.420 ops/s
Iteration  47: 7028005.883 ops/s
Iteration  48: 7065894.044 ops/s
Iteration  49: 7029249.805 ops/s
Iteration  50: 7029205.703 ops/s


Result "bean.transform.unittest.jmhtest.Jmh.benchMarkBeanTransformsHandler":
  6891863.069 ±(99.9%) 131251.947 ops/s [Average]
  (min, avg, max) = (6135038.181, 6891863.069, 7104391.429), stdev = 265135.427
  CI (99.9%): [6760611.122, 7023115.017] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=61782:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 50 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkMapStruct

# Run progress: 40.00% complete, ETA 00:12:51
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/E:/apache-maven-3.6.2-bin/localRepository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4164360.055 ops/s
# Warmup Iteration   2: 5160050.932 ops/s
# Warmup Iteration   3: 5397283.704 ops/s
# Warmup Iteration   4: 5322874.246 ops/s
# Warmup Iteration   5: 5396195.862 ops/s
Iteration   1: 5338259.598 ops/s
Iteration   2: 4915139.150 ops/s
Iteration   3: 5336872.964 ops/s
Iteration   4: 5382359.280 ops/s
Iteration   5: 5346621.556 ops/s
Iteration   6: 5404238.548 ops/s
Iteration   7: 5392030.160 ops/s
Iteration   8: 5382175.363 ops/s
Iteration   9: 5370684.914 ops/s
Iteration  10: 5425527.013 ops/s
Iteration  11: 5108135.013 ops/s
Iteration  12: 5208499.511 ops/s
Iteration  13: 5365831.801 ops/s
Iteration  14: 4921298.027 ops/s
Iteration  15: 5394765.948 ops/s
Iteration  16: 5338904.348 ops/s
Iteration  17: 4072041.844 ops/s
Iteration  18: 4898675.532 ops/s
Iteration  19: 5035757.488 ops/s
Iteration  20: 4876756.451 ops/s
Iteration  21: 5276273.538 ops/s
Iteration  22: 5235021.106 ops/s
Iteration  23: 5331382.662 ops/s
Iteration  24: 5402267.339 ops/s
Iteration  25: 5018542.258 ops/s
Iteration  26: 4951646.970 ops/s
Iteration  27: 5370784.178 ops/s
Iteration  28: 5371300.222 ops/s
Iteration  29: 5397347.132 ops/s
Iteration  30: 5386358.987 ops/s
Iteration  31: 5382267.870 ops/s
Iteration  32: 5323369.504 ops/s
Iteration  33: 5342065.957 ops/s
Iteration  34: 5369018.702 ops/s
Iteration  35: 5320516.601 ops/s
Iteration  36: 5358478.461 ops/s
Iteration  37: 5328384.094 ops/s
Iteration  38: 4955433.264 ops/s
Iteration  39: 5359214.872 ops/s
Iteration  40: 5368843.247 ops/s
Iteration  41: 5413571.467 ops/s
Iteration  42: 5411069.407 ops/s
Iteration  43: 5223004.482 ops/s
Iteration  44: 5372656.899 ops/s
Iteration  45: 5284475.240 ops/s
Iteration  46: 5381766.347 ops/s
Iteration  47: 5359449.248 ops/s
Iteration  48: 5414883.562 ops/s
Iteration  49: 5355065.057 ops/s
Iteration  50: 4925176.973 ops/s


Result "bean.transform.unittest.jmhtest.Jmh.benchMarkMapStruct":
  5250084.203 ±(99.9%) 118260.604 ops/s [Average]
  (min, avg, max) = (4072041.844, 5250084.203, 5425527.013), stdev = 238892.271
  CI (99.9%): [5131823.599, 5368344.807] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=61782:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 50 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkSelmaMapper

# Run progress: 60.00% complete, ETA 00:08:34
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/E:/apache-maven-3.6.2-bin/localRepository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5339233.168 ops/s
# Warmup Iteration   2: 6968367.780 ops/s
# Warmup Iteration   3: 7173123.592 ops/s
# Warmup Iteration   4: 7167364.167 ops/s
# Warmup Iteration   5: 7091547.127 ops/s
Iteration   1: 7183969.627 ops/s
Iteration   2: 7187582.431 ops/s
Iteration   3: 7171598.816 ops/s
Iteration   4: 7079594.465 ops/s
Iteration   5: 7130952.205 ops/s
Iteration   6: 7077172.324 ops/s
Iteration   7: 7142450.323 ops/s
Iteration   8: 7111284.138 ops/s
Iteration   9: 7145222.736 ops/s
Iteration  10: 6344688.630 ops/s
Iteration  11: 6656156.993 ops/s
Iteration  12: 6792921.838 ops/s
Iteration  13: 6848509.102 ops/s
Iteration  14: 6796669.894 ops/s
Iteration  15: 6865182.724 ops/s
Iteration  16: 6819473.133 ops/s
Iteration  17: 6849182.736 ops/s
Iteration  18: 6841195.069 ops/s
Iteration  19: 6867855.904 ops/s
Iteration  20: 6862857.594 ops/s
Iteration  21: 6849418.647 ops/s
Iteration  22: 6487389.426 ops/s
Iteration  23: 6534337.433 ops/s
Iteration  24: 6757601.974 ops/s
Iteration  25: 6732087.613 ops/s
Iteration  26: 6775400.430 ops/s
Iteration  27: 6762382.395 ops/s
Iteration  28: 6726595.976 ops/s
Iteration  29: 6750559.627 ops/s
Iteration  30: 6770910.438 ops/s
Iteration  31: 6742138.887 ops/s
Iteration  32: 6741256.265 ops/s
Iteration  33: 6679561.949 ops/s
Iteration  34: 6251898.146 ops/s
Iteration  35: 6495458.436 ops/s
Iteration  36: 6789725.538 ops/s
Iteration  37: 6783040.896 ops/s
Iteration  38: 6724198.590 ops/s
Iteration  39: 6786075.563 ops/s
Iteration  40: 6720927.345 ops/s
Iteration  41: 6747236.126 ops/s
Iteration  42: 6744524.913 ops/s
Iteration  43: 6755624.438 ops/s
Iteration  44: 6705519.762 ops/s
Iteration  45: 6812661.797 ops/s
Iteration  46: 6309794.562 ops/s
Iteration  47: 6617793.906 ops/s
Iteration  48: 6752863.360 ops/s
Iteration  49: 6753070.109 ops/s
Iteration  50: 6589967.011 ops/s


Result "bean.transform.unittest.jmhtest.Jmh.benchMarkSelmaMapper":
  6788490.845 ±(99.9%) 105572.909 ops/s [Average]
  (min, avg, max) = (6251898.146, 6788490.845, 7187582.431), stdev = 213262.498
  CI (99.9%): [6682917.936, 6894063.754] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 13.0.1, Java HotSpot(TM) 64-Bit Server VM, 13.0.1+9
# VM invoker: E:\Program Files\Java\jdk-13.0.1\bin\java.exe
# VM options: -javaagent:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\lib\idea_rt.jar=61782:D:\PROGRAM FILES\JetBrains\IntelliJ IDEA 2019.2.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 1 s each
# Measurement: 50 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: bean.transform.unittest.jmhtest.Jmh.benchMarkSpringBeanUtils

# Run progress: 80.00% complete, ETA 00:04:17
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/E:/apache-maven-3.6.2-bin/localRepository/cglib/cglib/3.3.0/cglib-3.3.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
290886.225 ops/s
# Warmup Iteration   2: 444062.485 ops/s
# Warmup Iteration   3: 483038.053 ops/s
# Warmup Iteration   4: 318413.402 ops/s
# Warmup Iteration   5: 455055.004 ops/s
Iteration   1: 436548.863 ops/s
Iteration   2: 467030.955 ops/s
Iteration   3: 431795.342 ops/s
Iteration   4: 461128.388 ops/s
Iteration   5: 460432.305 ops/s
Iteration   6: 442666.251 ops/s
Iteration   7: 389049.068 ops/s
Iteration   8: 443440.248 ops/s
Iteration   9: 467529.889 ops/s
Iteration  10: 460192.739 ops/s
Iteration  11: 470610.022 ops/s
Iteration  12: 476270.153 ops/s
Iteration  13: 461276.881 ops/s
Iteration  14: 449654.198 ops/s
Iteration  15: 412403.167 ops/s
Iteration  16: 427218.297 ops/s
Iteration  17: 444238.213 ops/s
Iteration  18: 434308.598 ops/s
Iteration  19: 419447.153 ops/s
Iteration  20: 409029.480 ops/s
Iteration  21: 466800.355 ops/s
Iteration  22: 433179.297 ops/s
Iteration  23: 441435.454 ops/s
Iteration  24: 479705.519 ops/s
Iteration  25: 472737.988 ops/s
Iteration  26: 453080.768 ops/s
Iteration  27: 416476.235 ops/s
Iteration  28: 430755.234 ops/s
Iteration  29: 467783.544 ops/s
Iteration  30: 443983.563 ops/s
Iteration  31: 444952.347 ops/s
Iteration  32: 459102.982 ops/s
Iteration  33: 445048.568 ops/s
Iteration  34: 464061.173 ops/s
Iteration  35: 441894.265 ops/s
Iteration  36: 466099.722 ops/s
Iteration  37: 414093.138 ops/s
Iteration  38: 391975.380 ops/s
Iteration  39: 406696.571 ops/s
Iteration  40: 423802.291 ops/s
Iteration  41: 420571.666 ops/s
Iteration  42: 429968.945 ops/s
Iteration  43: 409047.295 ops/s
Iteration  44: 436631.881 ops/s
Iteration  45: 426736.670 ops/s
Iteration  46: 433413.617 ops/s
Iteration  47: 442397.043 ops/s
Iteration  48: 395123.805 ops/s
Iteration  49: 435497.447 ops/s
Iteration  50: 448941.160 ops/s


Result "bean.transform.unittest.jmhtest.Jmh.benchMarkSpringBeanUtils":
  440125.283 ±(99.9%) 11278.856 ops/s [Average]
  (min, avg, max) = (389049.068, 440125.283, 479705.519), stdev = 22783.847
  CI (99.9%): [428846.427, 451404.138] (assumes normal distribution)


# Run complete. Total time: 00:21:24

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode  Cnt        Score        Error  Units
Jmh.benchMarkBeanManual             thrpt   50  7159828.750 ±  97549.112  ops/s
Jmh.benchMarkBeanTransformsHandler  thrpt   50  6891863.069 ± 131251.947  ops/s
Jmh.benchMarkMapStruct              thrpt   50  5250084.203 ± 118260.604  ops/s
Jmh.benchMarkSelmaMapper            thrpt   50  6788490.845 ± 105572.909  ops/s
Jmh.benchMarkSpringBeanUtils        thrpt   50   440125.283 ±  11278.856  ops/s
